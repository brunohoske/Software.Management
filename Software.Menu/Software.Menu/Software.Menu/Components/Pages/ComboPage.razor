
@inherits ProductPage
@attribute [StreamRendering(true)]

@code {

    private async Task ToggleSelectionGroup(SelectionGroupProductModel product, SelectionGroupModel group)
    {
        // Encontrar um item já selecionado dentro do grupo
        var existingProduct = group.SelectionGroupProducts.FirstOrDefault(p => group.SelectionGroupProducts.Contains(p));

        // Se houver um produto já marcado no grupo, remove
        if (existingProduct != null)
        {
            group.SelectionGroupProducts.Remove(existingProduct);
        }

        // Adiciona o novo produto selecionado
        group.SelectionGroupProducts.Add(product);
        await UpdateTotal();
    }

    private bool IsChecked(SelectionGroupModel group, SelectionGroupProductModel product) =>
        group.SelectionGroupProducts.Any(p => p.Product.Id == product.Product.Id);
}

<style>
    .quantity-controls button {
        width: 30px;
        height: 30px;
        border: none;
        background-color: #00a680;
        color: white;
        font-weight: bold;
        border-radius: 5px;
    }

        .quantity-controls button:hover {
            background-color: #007e5e;
        }

    .quantity-label {
        min-width: 30px;
        display: inline-block;
        text-align: center;
        font-weight: bold;
    }

    .scroll-container {
        display: flex;
        overflow-x: auto;
        gap: 20px;
        padding-bottom: 10px;
    }

    .side-item {
        min-width: 150px;
    }

        .side-item img {
            max-width: 100px;
        }

    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
    }

    .product-card {
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        transition: 0.3s;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    .follow-up-item {
        transition: 0.3s;
        cursor: pointer;
    }

        .follow-up-item:hover {
            transform: translateY(-3px);
        }

    .ingredient-item {
        cursor: pointer;
    }

    .btn-primary {
        background-color: #00a680;
        border: none;
    }

        .btn-primary:hover {
            background-color: #007e5e;
        }

    .selected {
        border: 2px solid #00a680;
        background-color: rgba(0, 166, 128, 0.1);
    }

</style>

@if(selectedProduct == null)
{
    <p><em>Carregando os dados do produto...</em></p>
}
else
{
    <div class="mt-4" style="border-bottom: inset;">
        <h5 class="fw-bold">Customize seu combo:</h5>
        <div class="row">

            <div class="container py-4">
                <h2 class="text-center">Monte seu Combo</h2>

                <div class="mb-4">
                    @foreach (var product in selectedProduct.Extras.ComboProducts)
                    {
                        <h4>Selecione o Produto:</h4>
                        <div class="item">
                            <img src="@product.Image" alt="produto">
                            <div class="info">
                                <h5>@product.ProductName</h5>
                                <p>+ R$ @product.GetPrice().ToString("F2")</p>
                            </div>
                            <input type="radio" name="burguer" class="form-check-input" id="burguer1" checked>
                        </div>
                    }


                    @foreach (var group in selectedProduct.Extras.SelectionGroups)
                    {

                        <div style="margin-top: 10px;">
                            <h4>Selecione o @group.ViewName:</h4>
                            @foreach (var product in group.SelectionGroupProducts)
                            {


                                <div class="item">
                                    <img src="@product.Product.Image" alt="produto">
                                    <div class="info">
                                        <h5>@product.Product.ProductName</h5>
                                        @* <p>+ R$ @product.GetPrice().ToString("F2")</p>*@
                                        <p>+ R$ @product.Price.ToString("F2")</p>
                                    </div>
                                    <input type="radio"
                                           name="grupo-product-@group.Id"
                                           id="@product.Product.Id"
                                           class="form-check-input me-2"
                                           checked="@IsChecked(group, product)"
                                           @onchange="(e) => ToggleSelectionGroup(product,group)" />
                                </div>
                            }
                        </div>

                    }



                </div>



            </div>
        </div>
    </div>
}


                                           